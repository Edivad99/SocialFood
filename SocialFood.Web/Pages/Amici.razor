@page "/friends"
@inject SFClient sfClient
@attribute [Authorize]

<PageTitle>I tuoi amici | SocialFood</PageTitle>

<h1>I tuoi amici (@friends.Count())</h1>

<UsersList Users="friends"/>

<h5>Aggiungi amico</h5>
<EditForm Model="user" OnValidSubmit="FindUsers">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label for="username">Username:</label>
    <InputText id="username" @bind-Value="user.Username" />
    <button type="submit" class="btn btn-primary">Cerca</button>
</EditForm>

@if (!userFound)
{
    <h6 class="text-danger">Account trovati: 0</h6>
}
else
{
    int userCount = users.Count();
    if (userCount > 0)
    {
        <h6 class="text-success">Account trovati: @userCount</h6>
        <UsersList Users="users"/>
    }
}

@code {
    List<UserDTO> friends = new();
    bool userFound = true;
    List<UserDTO> users = new();

    DummyUser user = new();

    protected override async Task OnInitializedAsync()
    {
        friends = await sfClient.GetMyFriendsAsync();
    }

    async void FindUsers()
    {
        users = await sfClient.GetUserByUsername(user.Username);
        userFound = users.Any();
        StateHasChanged();
    }

    class DummyUser
    {
        [Required(ErrorMessage = "Inserisci un nome utente")]
        [MinLength(3, ErrorMessage = "Inserisci un nome utente di almeno {1} caratteri")]
        public string? Username { get; set; }
    }
}

