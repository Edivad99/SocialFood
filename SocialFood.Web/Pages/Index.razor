@page "/"
@attribute [Authorize]
@inject HttpClient HttpClient
@inject SFClient sfClient
@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>

<AuthorizeView>
    <h2>Bentornato, @context.User.GetFirstName()!</h2>
</AuthorizeView>

<ImageList images="@images">
    Ecco quello che è successo mentre non c'eri
</ImageList>


@code{
    List<ImageDTO> images = new();

    protected override async Task OnParametersSetAsync()
    {
        images = await sfClient.GetLatestImagesAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var subscription = await JSRuntime.InvokeAsync<NotificationSubscription>("blazorPushNotifications.requestSubscription");
            if (subscription != null)
            {
                try
                {
                    var response = await HttpClient.PutAsJsonAsync("/api/Notification/subscribe", subscription);
                    response.EnsureSuccessStatusCode();
                }
                catch (AccessTokenNotAvailableException ex)
                {
                    ex.Redirect();
                }
            }
        }
        catch(Exception e)
        {
            Console.WriteLine("Errore nel registrare la subscription per le notifiche");
            Console.WriteLine("Se sei in modalità incognito, le notifiche non sono supportate");
            Console.WriteLine("Se visualizzi questa pagina in Safari, le notifiche non sono supportate");
            Console.WriteLine($"Error message: {e.Message}");
            Console.WriteLine($"Error stack trace: {e.StackTrace}");
        }
    }
}
