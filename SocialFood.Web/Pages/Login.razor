@page "/login"
@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage


<h3>Login</h3>

@if(responseMessage != null && !responseMessage.IsSuccessStatusCode)
 {
    <p style="color:red;">Le credenziali inserite non sono corrette</p>
 }

<EditForm Model="user" OnSubmit="HandleLogin">
    <label for="username">Username</label>
    <InputText id="username" @bind-Value="user.Username" />
    <label for="password">Password</label>
    <InputText id="password" @bind-Value="user.Password" type="password"/>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>


@code {
    LoginRequest user = new LoginRequest();
    HttpResponseMessage? responseMessage;

    async Task HandleLogin()
    {
        responseMessage = await HttpClient.PostAsJsonAsync("api/Auth/login", user);
        if(responseMessage.IsSuccessStatusCode)
        {
            var authResponse = await responseMessage.Content.ReadFromJsonAsync<AuthResponse>();
            var token = authResponse.AccessToken;
            await LocalStorage.SetItemAsync("token", token);
            await AuthStateProvider.GetAuthenticationStateAsync();
        }
    }
}

