@page "/registration"
@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager


<h3>Registrazione</h3>

@if(responseMessage != null && !responseMessage.IsSuccessStatusCode)
 {
    <p style="color:red;">Le credenziali inserite non sono corrette</p>
 }

<EditForm Model="user" OnSubmit="HandleLogin">
    <ul class="vertical-form">
        <li>
            <label for="nome">Nome:</label>
            <InputText id="nome" @bind-Value="user.FirstName" />
        </li>
        <li>
            <label for="cognome">Cognome:</label>
            <InputText id="cognome" @bind-Value="user.LastName" />
        </li>
        <li>
            <label for="username">Username:</label>
            <InputText id="username" @bind-Value="user.Username" />
        </li>
        <li>
            <label for="password">Password:</label>
            <InputText id="password" @bind-Value="user.Password" type="password" />
        </li>
    </ul>
    <div class="btn-group" role="group">
        <button type="button" class="btn btn-outline-primary" @onclick="Login">Hai già un'account?</button>
        <button type="submit" class="btn btn-primary">Registrati</button>
    </div>
</EditForm>


@code {
    RegistrationRequest user = new();
    HttpResponseMessage? responseMessage;

    void Login() => NavigationManager.NavigateTo("/login");

    async Task HandleLogin()
    {
        responseMessage = await HttpClient.PostAsJsonAsync("api/Auth/registration", user);
        if(responseMessage.IsSuccessStatusCode)
        {
            var authResponse = await responseMessage.Content.ReadFromJsonAsync<AuthResponse>();
            var token = authResponse.AccessToken;
            await LocalStorage.SetItemAsync("token", token);
            await AuthStateProvider.GetAuthenticationStateAsync();
        }
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        string token = await LocalStorage.GetItemAsStringAsync("token");
        if (!string.IsNullOrEmpty(token))
        {
            NavigationManager.NavigateTo("/");
        }
        base.OnAfterRender(firstRender);
    }
}
